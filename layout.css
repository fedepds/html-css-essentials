/*👇 Estilos Generales */
body,
html {
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
  height: 100%;
}

.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

/*👇 Diseño de Flexbox */
.flexbox-layout {
  display: flex;
  flex-direction: column;
  height: 50%;
  background-color: #f0f8ff; /* Fondo azul claro */
}

.flexbox-header,
.flexbox-nav,
.flexbox-main,
.flexbox-sidebar,
.flexbox-footer {
  padding: 20px;
  margin: 10px;
  border-radius: 5px;
}

.flexbox-header {
  background-color: #ffb6c1; /* Rosa claro */
}

.flexbox-nav {
  background-color: #add8e6; /* Azul claro */
}

.flexbox-content {
  display: flex;
  flex: 1;
}

.flexbox-main {
  background-color: #90ee90; /* Verde claro */
  flex: 2;
}

.flexbox-sidebar {
  background-color: #ffa07a; /* Salmón claro */
  flex: 1;
}

.flexbox-footer {
  background-color: #d3d3d3; /* Gris claro */
}

/*👇 Diseño de Grid */
.grid-layout {
  display: grid;
  height: 50%;
  grid-template-areas:
    "header header"
    "nav nav"
    "main sidebar"
    "footer footer";
  grid-template-rows: auto auto 1fr auto;
  grid-template-columns: 2fr 1fr;
  background-color: #fff0f5; /* Fondo lavanda */
}

/* 👆 ¿Cómo funciona? 

📝 Notas: 

Grid Container (.grid-layout): display: grid;: Configura el diseño de la cuadrícula.
height: 50%;: Establece la altura del contenedor de la cuadrícula al 50% de la altura de su elemento padre.
grid-template-areas:: Define las áreas con nombre y su disposición:

"header header": El encabezado abarca ambas columnas en la primera fila.
"nav nav": La navegación abarca ambas columnas en la segunda fila.
"main sidebar": El contenido principal ocupa la primera columna y la barra lateral ocupa la segunda columna en la tercera fila.
"footer footer": El pie de página abarca ambas columnas en la cuarta fila.

⚠️ fr: La unidad fr en CSS Grid Layout significa "fracción del espacio disponible" (para el sistema de cuadrícula)
Es una unidad flexible que te permite asignar porciones del espacio disponible dentro de un contenedor de cuadrícula.
La unidad fr es especialmente útil para crear diseños de cuadrícula responsivos donde deseas distribuir el espacio
proporcionalmente entre los elementos de la cuadrícula.

grid-template-rows: auto auto 1fr auto;: Define las alturas de las filas:
Las dos primeras filas (auto y auto) ajustarán su altura en función de su contenido.
La tercera fila (1fr) ocupará el espacio disponible restante.
La cuarta fila (auto) ajustará su altura en función de su contenido.
grid-template-columns: 2fr 1fr;: Define los anchos de las columnas:
La primera columna (2fr) ocupará el doble de espacio que la segunda columna (1fr). 

AUTO vs FR

⭐️ auto

Comportamiento: El tamaño de la fila o columna se determina por el tamaño de su contenido.
Si el contenido es pequeño, la fila o columna será pequeña; si el contenido es grande, la fila o columna se expandirá para ajustarse.

Uso: Se utiliza mejor cuando deseas que las pistas de la cuadrícula se ajusten estrechamente a su contenido.


⭐️ 1fr

Comportamiento: El tamaño de la fila o columna es una fracción del espacio disponible restante
en el contenedor de la cuadrícula. La unidad fr significa "fracción".

Uso: Se utiliza mejor cuando deseas distribuir el espacio disponible proporcionalmente entre las pistas de la cuadrícula.

*/

.grid-header,
.grid-nav,
.grid-main,
.grid-sidebar,
.grid-footer {
  padding: 20px;
  margin: 10px;
  border-radius: 5px;
}

.grid-header {
  background-color: #ffb6c1; /* Rosa claro */
  grid-area: header;
}

.grid-nav {
  background-color: #add8e6; /* Azul claro */
  grid-area: nav;
}

.grid-main {
  background-color: #90ee90; /* Verde claro */
  grid-area: main;
}

.grid-sidebar {
  background-color: #ffa07a; /* Salmón claro */
  grid-area: sidebar;
}

.grid-footer {
  background-color: #d3d3d3; /* Gris claro */
  grid-area: footer;
}

